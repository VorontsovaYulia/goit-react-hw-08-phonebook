{"version":3,"file":"static/js/280.b298ca99.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactCard/ContactCard.styled.js","components/ContactCard/ContactCard.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/PhonebookPage/PhonebookPage.js"],"sourcesContent":["import { styled } from \"styled-components\";\nimport { Form } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n       display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    flex-direction: column;\n    align-items: flex-end;\n    padding: 20px 0;\n    align-content: space-around;\n`;\n\nexport const StyledLabel = styled.label`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n`;","import * as Yup from 'yup';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Formik, Field } from \"formik\";\nimport { TextField } from 'formik-mui';\nimport Button from '@mui/material/Button';\nimport { StyledForm, StyledLabel } from \"./ContactForm.styled\";\nimport { addContact } from \"redux/contacts/operations\";\n\nexport const ContactForm = () => {\n\n  const NameSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'Too Short!')\n      .max(30, 'Too Long!')\n      .matches(\n        /^[A-Za-zА-Яа-яЄєІіЇїҐґ\\s]+$/,\n        'Use only letters'\n      )\n      .required('Required'),\n    number: Yup.string()\n      .required('Required')\n      .matches(/^\\+?\\d{2} ?-?\\(?\\d{3}\\)? ?-?\\d{3} ?-?\\d{2} ?-?\\d{2}$/, 'Intenational format number(12 symbol)'),\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items)\n\n  return (\n    <>\n      <Formik\n        validationSchema={NameSchema}\n        initialValues={{\n          name: '',\n          number: ''\n        }}\n    \n        onSubmit={(values, actions) => {\n          for (const el of contacts) {\n            if (el.name === values.name) {\n              return toast.error(`${el.name} is already in contacts.`);\n            }\n          }\n          dispatch(addContact({\n            name: values.name,\n            number: values.number,\n          }))\n          actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <StyledLabel>\n            <Field\n              component={TextField}\n              label=\"Name\"\n              name=\"name\"\n              variant=\"standard\"\n              sx={{ width: 400 }}\n            />\n          </StyledLabel>\n          <StyledLabel>\n            <Field\n              component={TextField}\n              label=\"Number\"\n              name=\"number\"\n              variant=\"standard\"\n              type=\"string\"\n              sx={{ width: 400 }}\n            />\n          </StyledLabel>\n          <Button variant=\"contained\" type=\"submit\">Add contact</Button>\n        </StyledForm>\n      </Formik>\n      <Toaster position=\"top-center\" />\n    </>\n  )\n};","import { styled } from \"styled-components\";\nimport Box from '@mui/material/Box';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n`;\n\nexport const Text = styled.p`\n    text-align: center;\n`;\n\nexport const StyledBox = styled(Box)`\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    gap: 20px;\n`;","import { useState } from 'react';\nimport { useDispatch} from \"react-redux\"\nimport TableCell from '@mui/material/TableCell';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { TextField } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport Grid from '@mui/material/Grid';\nimport EditNoteIcon from '@mui/icons-material/EditNote';\nimport Avatar from '@mui/material/Avatar';\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\nimport { deleteContact, updateContact } from \"redux/contacts/operations\";\nimport { StyledBox, Text } from './ContactCard.styled';\n\nexport const ContactCard = ({ item: { name, number, id } }) => {\n    const [open, setOpen] = useState(false);\n    const dispach = useDispatch();\n   \n    const handleOpenModal = () => setOpen(true);\n    const handleCloseModal = () => setOpen(false);\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        const data = new FormData(evt.currentTarget);\n        const newContact = {\n            id,\n            contact: {\n                name: data.get('name'),\n                number: data.get('number'),\n            }\n        };\n        dispach(updateContact(newContact))\n        handleCloseModal();\n    };\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #1976d2',\n        boxShadow: 24,\n        p: 4,\n    };\n\n    return (\n        <>\n            <TableCell component=\"th\" scope=\"row\">\n                <Avatar sx={{ backgroundColor: '#1976d2', margin: '0 auto' }} />\n            </TableCell>\n            <TableCell align=\"center\">{name}</TableCell>\n            <TableCell align=\"center\">{number}</TableCell>\n            <TableCell align=\"center\">\n                <Grid item xs={8}>\n                    <EditNoteIcon cursor='pointer' onClick={() => handleOpenModal()\n                    } />\n                </Grid>\n                \n            </TableCell>\n            <TableCell align=\"center\">\n                <Grid item xs={8}>\n                    <DeleteForeverIcon cursor='pointer' onClick={() => dispach(deleteContact(id))} />\n                </Grid>\n            </TableCell>\n            \n            <Modal\n                open={open}\n                onClose={handleCloseModal}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        <Text>Edit contact</Text>\n                    </Typography>\n                    <StyledBox component=\"form\" onSubmit={handleSubmit}>\n                        <TextField id=\"standard-basic\" name=\"name\" variant=\"standard\" defaultValue={name} />\n                        <TextField id=\"standard-basic\" name=\"number\" variant=\"standard\" defaultValue={number} />\n                        <Button type='submit'><TaskAltIcon sx={{ fontSize: 40 }} /></Button>\n                    </StyledBox>\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    </Typography>\n                </Box>\n            </Modal>\n        </>\n    )\n};","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport { ContactCard } from \"components/ContactCard/ContactCard\"\nimport { selectContacts, selectFilter } from \"redux/contacts/selectors\";\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const filterContacts = contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n    const dispatch = useDispatch();\n    const isLoading = useSelector(state => state.contacts.isLoading)\n    useEffect(() => {\n        dispatch(fetchContacts())\n    }, [dispatch]);\n    \n    return (\n        isLoading ? <Box sx={{ width: '100%', marginTop: 4}}>\n                <LinearProgress />\n            </Box> :\n            <div>\n                <TableContainer component={Paper}>\n                    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                        <TableBody>\n                            {filterContacts.map(el =>\n                                <TableRow\n                                    key={el.id}\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                                    <ContactCard item={el} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n    )\n};","import { useDispatch } from \"react-redux\";\nimport { TextField } from \"@mui/material\";\nimport { filterContact } from \"redux/contacts/filterSlice\";\n\nexport const Filter = () => {\n    const dispach = useDispatch();\n    \n    return (\n        <div>\n            <TextField\n                label=\"Search contact\"\n                id=\"filled-size-small\"\n                variant=\"filled\"\n                size=\"small\"\n                onChange={evt => dispach(filterContact(evt.currentTarget.value))} name=\"filter\"\n            />\n        </div>\n    )\n};","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useSelector } from \"react-redux\";\n\nconst PhonebookPage = () => {\n\n    const contacts = useSelector(state => state.contacts.items);\n\n    return <div>\n        <ContactForm />\n        {contacts.length > 0 && <Filter />}\n        <ContactList />\n    </div>\n};\n\nexport default PhonebookPage;"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","StyledLabel","_templateObject2","ContactForm","NameSchema","Yup","shape","name","min","max","matches","required","number","dispatch","useDispatch","contacts","useSelector","state","items","_jsxs","_Fragment","children","_jsx","Formik","validationSchema","initialValues","onSubmit","values","actions","_step","_iterator","_createForOfIteratorHelper","s","n","done","el","value","toast","concat","err","e","f","addContact","resetForm","Field","component","TextField","label","variant","sx","width","type","Button","Toaster","position","Text","StyledBox","Box","_templateObject3","ContactCard","_ref","_ref$item","item","id","_useState","useState","_useState2","_slicedToArray","open","setOpen","dispach","handleCloseModal","TableCell","scope","Avatar","backgroundColor","margin","align","Grid","xs","EditNoteIcon","cursor","onClick","DeleteForeverIcon","deleteContact","Modal","onClose","top","left","transform","bgcolor","border","boxShadow","p","Typography","evt","preventDefault","data","FormData","currentTarget","newContact","contact","get","updateContact","defaultValue","TaskAltIcon","fontSize","mt","selectContacts","selectFilter","filter","ContactList","filterContacts","toLowerCase","includes","isLoading","useEffect","fetchContacts","marginTop","LinearProgress","TableContainer","Paper","Table","minWidth","TableBody","map","TableRow","Filter","size","onChange","filterContact","length"],"sourceRoot":""}